// import configs from "./config.json";
// console.log(configs, "configs")
const data = {
    type: "init",
    theming: {
        primaryColor: "blue",
    },
    config: {
        button: "trigger",
    },
};
const allowedEvents = ["xr_add_to_cart"];
const emitEvent = (XREvent) => {
    if (allowedEvents.includes(XREvent.event)) {
        parent.postMessage({ XREvent }, "*");
    }
    else {
        console.error("wrong event passed on emit.");
    }
};
const messages = (message) => {
    logEvents(message.data.XREvent.event);
    parent.removeEventListener("message", messages);
};
const listenToEvent = (XREvents) => {
    if (allowedEvents.includes(XREvents)) {
        parent.addEventListener("message", messages);
    }
    else {
        console.error("unsupported event.");
    }
};
const iframe = document.querySelector(".inte-iframe") || null;
iframe.src = "../Iframe.html";
const initBtn = document.querySelector(".inte-init-btn");
const changeIframe = () => {
    const iframeValue = document.getElementById("inte-input-frame");
    iframeValue && (iframe.src = iframeValue.value);
};
initBtn.addEventListener("click", changeIframe);
const logEvents = (e) => {
    const eventLoggerDiv = document.querySelector(".inte-event-logger-div");
    const p = document.createElement("p");
    p.innerText = "=>" + JSON.stringify(e);
    eventLoggerDiv.appendChild(p);
};
const generateBtn = document.querySelector(".inte-generate-button");
const generateEvent = () => {
    const type = document.querySelector(".inte-input");
    const typeValue = type?.value;
    const eventData = document.querySelector(".inte-data");
    const eventValue = eventData?.value;
    const data = {
        type: typeValue,
        data: eventValue,
    };
    iframe.contentWindow?.postMessage({
        data,
    }, "*");
};
generateBtn.onclick = generateEvent;
const init = () => {
    const iWindow = iframe?.contentWindow || null;
    if (iWindow) {
        logEvents("init");
        iWindow.emitEvent = emitEvent;
        iWindow.listenToEvent = listenToEvent;
        iWindow.postMessage({
            data,
        }, "*");
    }
};
iframe.onload = init;
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6Ii4uL3NyYy8iLCJzb3VyY2VzIjpbImFwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSx1Q0FBdUM7QUFDdkMsa0NBQWtDO0FBQ2xDLE1BQU0sSUFBSSxHQUFtQjtJQUMzQixJQUFJLEVBQUUsTUFBTTtJQUNaLE9BQU8sRUFBRTtRQUNQLFlBQVksRUFBRSxNQUFNO0tBQ3JCO0lBQ0QsTUFBTSxFQUFFO1FBQ04sTUFBTSxFQUFFLFNBQVM7S0FDbEI7Q0FDRixDQUFDO0FBQ0YsTUFBTSxhQUFhLEdBQW9CLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUUxRCxNQUFNLFNBQVMsR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRTtJQUNyQyxJQUFJLGFBQWEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3pDLE1BQU0sQ0FBQyxXQUFXLENBQUMsRUFBRSxPQUFPLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztLQUN0QztTQUFNO1FBQ0wsT0FBTyxDQUFDLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0tBQzlDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxRQUFRLEdBQUcsQ0FBQyxPQUFxQixFQUFFLEVBQUU7SUFDekMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDbEQsQ0FBQyxDQUFDO0FBRUYsTUFBTSxhQUFhLEdBQUcsQ0FBQyxRQUFrQixFQUFFLEVBQUU7SUFDM0MsSUFBSSxhQUFhLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ3BDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUM7S0FDOUM7U0FBTTtRQUNMLE9BQU8sQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztLQUNyQztBQUNILENBQUMsQ0FBQztBQUVGLE1BQU0sTUFBTSxHQUNULFFBQVEsQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUF1QixJQUFJLElBQUksQ0FBQztBQUV4RSxNQUFNLENBQUMsR0FBRyxHQUFHLGdCQUFnQixDQUFDO0FBRTlCLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQXNCLENBQUM7QUFFOUUsTUFBTSxZQUFZLEdBQUcsR0FBRyxFQUFFO0lBQ3hCLE1BQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQ3pDLGtCQUFrQixDQUNDLENBQUM7SUFDdEIsV0FBVyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDbEQsQ0FBQyxDQUFDO0FBRUYsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFZLENBQUMsQ0FBQztBQUVoRCxNQUFNLFNBQVMsR0FBRyxDQUFDLENBQU0sRUFBRSxFQUFFO0lBQzNCLE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQzNDLHdCQUF3QixDQUNQLENBQUM7SUFDcEIsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN0QyxDQUFDLENBQUMsU0FBUyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEMsQ0FBQyxDQUFDO0FBRUYsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FDeEMsdUJBQXVCLENBQ0gsQ0FBQztBQUV2QixNQUFNLGFBQWEsR0FBRyxHQUFHLEVBQUU7SUFDekIsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQXFCLENBQUM7SUFDdkUsTUFBTSxTQUFTLEdBQUcsSUFBSSxFQUFFLEtBQUssQ0FBQztJQUM5QixNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBd0IsQ0FBQztJQUM5RSxNQUFNLFVBQVUsR0FBRyxTQUFTLEVBQUUsS0FBSyxDQUFDO0lBQ3BDLE1BQU0sSUFBSSxHQUFvQjtRQUM1QixJQUFJLEVBQUUsU0FBUztRQUNmLElBQUksRUFBRSxVQUFVO0tBQ2pCLENBQUM7SUFDRixNQUFNLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FDL0I7UUFDRSxJQUFJO0tBQ0wsRUFDRCxHQUFHLENBQ0osQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLFdBQVcsQ0FBQyxPQUFPLEdBQUcsYUFBYSxDQUFDO0FBRXBDLE1BQU0sSUFBSSxHQUFHLEdBQUcsRUFBRTtJQUNoQixNQUFNLE9BQU8sR0FBSSxNQUFNLEVBQUUsYUFBOEIsSUFBSSxJQUFJLENBQUM7SUFDaEUsSUFBSSxPQUFPLEVBQUU7UUFDWCxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEIsT0FBTyxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDOUIsT0FBTyxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDdEMsT0FBTyxDQUFDLFdBQVcsQ0FDakI7WUFDRSxJQUFJO1NBQ0wsRUFDRCxHQUFHLENBQ0osQ0FBQztLQUNIO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMifQ==